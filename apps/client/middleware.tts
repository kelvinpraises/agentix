import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export function middleware(request: NextRequest) {
  const token =
    request.cookies.get("token")?.value ||
    request.headers.get("authorization")?.replace("Bearer ", "");
  const { pathname } = request.nextUrl;

  // Check if the request is for the auth pages (root path)
  const isAuthPage = pathname === "/";

  // Check if the request is for public files or API routes
  const isPublicFile =
    pathname.startsWith("/_next") ||
    pathname.startsWith("/favicon.ico") ||
    pathname.startsWith("/public") ||
    pathname.startsWith("/api");

  // Protected routes - all routes except auth page and public files
  const isProtectedRoute = !isAuthPage && !isPublicFile;

  // If the user is not authenticated and trying to access a protected route
  if (!token && isProtectedRoute) {
    const url = new URL("/", request.url);
    return NextResponse.redirect(url);
  }

  // If the user is authenticated and trying to access the auth page
  if (token && isAuthPage) {
    const url = new URL("/dashboard", request.url);
    return NextResponse.redirect(url);
  }

  return NextResponse.next();
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     * - api routes (handled separately)
     */
    "/((?!_next/static|_next/image|favicon.ico|api).*)",
  ],
};
